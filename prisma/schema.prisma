// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id String @id @default(cuid())
  email String @unique
  firstName String?
  password String
  isResettingPassword Boolean @default(false)
  resetPasswordToken String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  avatarFileKey String?  @unique

  conversations Conversation[]
  sentMessages ChatMessage[]
}

model Conversation {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users User[]
  messages ChatMessage[]
}

model ChatMessage {
  id String @id @default(cuid())
  content String 
  createdAt DateTime @default(now())
  sender User @relation(fields: [senderId], references: [id])
  senderId String
  conversation Conversation @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chatId String

  @@index([chatId])
  @@index([senderId])

}